

>> rpc refence
---------------------------------------------------------------------------------------------------
sofa-pbrpc
PhxRPC

http://blog.csdn.net/mindfloating/article/details/39474123

rpc_server
rpc_client
rpc_protocol
rpc_connector
rpc_acceptor
rpc_invoker
rpc_proxy
rpc_processor
rpc_channel


>> asio import
---------------------------------------------------------------------------------------------------
1. download asio zip from https://github.com/avplayer/avhttp/tree/master/include
2. enter the "include" floder
3. move "asio.hpp" file into asio folder.
4. add below two rows macro definition into "asio/detail/config.hpp"
#define ASIO_STANDALONE
#define ASIO_HEADER_ONLY


>> 
---------------------------------------------------------------------------------------------------
KCP MTU , UDP PACKET MAX LENGTH 576 


>> openssl install on linux
------------------------------------------------------------------------------------------------
./config -fPIC no-shared
make
make install


>> openssl create your certificates and sign them
------------------------------------------------------------------------------------------------
//Generate a private key
openssl genrsa -des3 -out server.key 1024

//Generate Certificate signing request
openssl req -new -key server.key -out server.csr

//Sign certificate with private key
openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt

//Remove password requirement (needed for example)
cp server.key server.key.secure
openssl rsa -in server.key.secure -out server.key

//Generate dhparam file
openssl dhparam -out dh512.pem 512

//Once you've done that, you need to change the filenames in server.cpp and client.cpp.

server.cpp

context_.use_certificate_chain_file("server.crt"); 
context_.use_private_key_file("server.key", boost::asio::ssl::context::pem);
context_.use_tmp_dh_file("dh512.pem");

client.cpp

context_.load_verify_file("server.crt");
